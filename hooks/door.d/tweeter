#!/usr/bin/perl
use strict;
use warnings;
use WWW::Twitpic;
use Net::Twitter;
use FindBin;
use Digest::SHA1 qw/sha1_hex/;
use YAML qw/LoadFile/;
use Fatal qw/rename/;

my $arg = shift @ARGV;
exit unless $arg;

my $vhs_config_file = "$FindBin::Bin/../../.vhs.yaml";
my $VHS = LoadFile($vhs_config_file);

my %msg_map = (
    'open' => 'My door opened!',
    closed => 'My door closed!',
    test   => 'My systems are being tested!',
);

if (my $msg = $msg_map{$arg}) {
    my $image_url = take_picture() if $arg eq 'open';;
    send_tweet($msg, $image_url);
}

exit;

sub send_tweet {
    my $msg = shift;
    my $image_url = shift;

    if ($image_url and length($msg) < (140 - 1 + length $image_url)) {
        $msg .= " $image_url";
    }

    my $nt = Net::Twitter->new( 
        username => $VHS->{twitter_username},
        password => $VHS->{twitter_password},
        traits => ['WrapError', 'API::REST'],
    );
    return if $ENV{VHS_TEST};
    unless ( $nt->update($msg) ) {
        warn "Error sending tweet: " . $nt->http_message . "\n";
    }
    print "Sent tweet!\n";
}

sub take_picture {
    my $now_hash = sha1_hex(scalar localtime);
    my $short_hash = substr $now_hash, 0, 6;
    my $filename = "$VHS->{picture_base}/$short_hash.jpeg";
    system("streamer -c /dev/video0 -b 16 -o $filename");
    (my $short_name = $filename) =~ s#.+/(.+).jpeg#$1.jpg#;
    my $short_file = "$VHS->{picture_base}/$short_name";
    rename $filename => $short_file;

    my $pic_uri = "$VHS->{picture_uri_base}/$short_name";
    print "\nSaved $short_file as $pic_uri\n";
    return $pic_uri;
}
